description = "Kroto+ Grpc Coroutine Support"

apply from: "$rootDir/publishing.gradle"
apply plugin: 'com.google.protobuf'
apply plugin: 'jacoco'

def experimentalFlags = [
    "-Xuse-experimental=kotlin.Experimental",
    "-Xuse-experimental=kotlinx.coroutines.ExperimentalCoroutinesApi",
    "-Xuse-experimental=kotlinx.coroutines.ObsoleteCoroutinesApi",
    "-Xuse-experimental=com.github.marcoferrer.krotoplus.coroutines.KrotoPlusInternalApi"
]

compileKotlin {
    kotlinOptions {
        // We're setting the jvm target to 1.6 to maintain
        // compatibility with android runtime
        jvmTarget = "1.6"
        freeCompilerArgs += experimentalFlags
    }
}
compileTestKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
        freeCompilerArgs += experimentalFlags
    }
}

dependencies {
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:${Versions.coroutines}"
    implementation "io.grpc:grpc-stub:${Versions.grpc}"

    testProtobuf project(':test-api')
    testImplementation project(':test-api:grpc')
    testImplementation project(':test-api:java')
    testImplementation "io.mockk:mockk:${Versions.mockk}"
}

tasks.withType(JavaCompile) {
    enabled = false
}

protobuf {
    protoc { artifact = "com.google.protobuf:protoc:${Versions.protobuf}"}

    //noinspection GroovyAssignabilityCheck
    plugins {
        coroutines {
            path = "${rootProject.projectDir}/protoc-gen-grpc-coroutines/build/libs/protoc-gen-grpc-coroutines-${project.version}-jvm8.jar"
        }
    }

    generateProtoTasks {

        all().each{ task ->
            task.dependsOn ':protoc-gen-grpc-coroutines:bootJar'
            task.builtins {
                remove java
            }
            task.plugins {
                coroutines {}
            }
        }
    }
}

jacoco {
    toolVersion = "0.8.3"
}

jacocoTestReport {
    sourceDirectories = files("$projectDir/src/main/kotlin")
    reports {
        xml.enabled = true
        xml.destination file("$buildDir/reports/jacoco/report.xml")
        html.enabled = true
        html.destination file("$buildDir/reports/coverage")
        csv.enabled = false
    }
    test.finalizedBy 'jacocoTestReport'
}