// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: krotoplus/compiler/config.proto

package com.github.marcoferrer.krotoplus.config;

public interface ProtoBuildersGenOptionsOrBuilder extends
    // @@protoc_insertion_point(interface_extends:krotoplus.compiler.ProtoBuildersGenOptions)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * Filter used for limiting the input files that are processed by the code generator
   * The default filter will match true against all input files.
   * </pre>
   *
   * <code>.krotoplus.compiler.FileFilter filter = 1;</code>
   */
  boolean hasFilter();
  /**
   * <pre>
   * Filter used for limiting the input files that are processed by the code generator
   * The default filter will match true against all input files.
   * </pre>
   *
   * <code>.krotoplus.compiler.FileFilter filter = 1;</code>
   */
  com.github.marcoferrer.krotoplus.config.FileFilter getFilter();
  /**
   * <pre>
   * Filter used for limiting the input files that are processed by the code generator
   * The default filter will match true against all input files.
   * </pre>
   *
   * <code>.krotoplus.compiler.FileFilter filter = 1;</code>
   */
  com.github.marcoferrer.krotoplus.config.FileFilterOrBuilder getFilterOrBuilder();

  /**
   * <pre>
   * By default the generated utility methods for building messages are
   * wrapped in an object similiar to a proto outer class. For better
   * ergonomics with code generated using 'java_multiple_files' the
   * builders can be unwrapped and generated at the root scope of
   * the output file.
   * </pre>
   *
   * <code>bool unwrap_builders = 2;</code>
   */
  boolean getUnwrapBuilders();

  /**
   * <pre>
   * Tag java builder classes with a kotlin interface annotated
   * with &#64;DslMarker. This requires the kroto-plus output directory to
   * match the generated java classes directory. Using &#64;DslMarker
   * provides safer and predictable dsl usage.
   * </pre>
   *
   * <code>bool use_dsl_markers = 3;</code>
   */
  boolean getUseDslMarkers();
}
