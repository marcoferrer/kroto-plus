// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: krotoplus/compiler/config.proto

package com.github.marcoferrer.krotoplus.config;

/**
 * <pre>
 * Configuration used by the 'Extendable Messages' code generator.
 * Since this code generator relies on the protoc insertion point API,
 * its outputDir must match that of the protoc java plugin.
 * </pre>
 *
 * Protobuf type {@code krotoplus.compiler.ExtendableMessagesGenOptions}
 */
public  final class ExtendableMessagesGenOptions extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:krotoplus.compiler.ExtendableMessagesGenOptions)
    ExtendableMessagesGenOptionsOrBuilder {
private static final long serialVersionUID = 0L;
  // Use ExtendableMessagesGenOptions.newBuilder() to construct.
  private ExtendableMessagesGenOptions(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private ExtendableMessagesGenOptions() {
    companionFieldName_ = "";
    companionClassName_ = "";
    companionExtends_ = "";
    companionImplements_ = "";
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new ExtendableMessagesGenOptions();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private ExtendableMessagesGenOptions(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 10: {
            com.github.marcoferrer.krotoplus.config.FileFilter.Builder subBuilder = null;
            if (filter_ != null) {
              subBuilder = filter_.toBuilder();
            }
            filter_ = input.readMessage(com.github.marcoferrer.krotoplus.config.FileFilter.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(filter_);
              filter_ = subBuilder.buildPartial();
            }

            break;
          }
          case 18: {
            java.lang.String s = input.readStringRequireUtf8();

            companionFieldName_ = s;
            break;
          }
          case 26: {
            java.lang.String s = input.readStringRequireUtf8();

            companionClassName_ = s;
            break;
          }
          case 34: {
            java.lang.String s = input.readStringRequireUtf8();

            companionExtends_ = s;
            break;
          }
          case 42: {
            java.lang.String s = input.readStringRequireUtf8();

            companionImplements_ = s;
            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.github.marcoferrer.krotoplus.config.Config.internal_static_krotoplus_compiler_ExtendableMessagesGenOptions_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.github.marcoferrer.krotoplus.config.Config.internal_static_krotoplus_compiler_ExtendableMessagesGenOptions_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.github.marcoferrer.krotoplus.config.ExtendableMessagesGenOptions.class, com.github.marcoferrer.krotoplus.config.ExtendableMessagesGenOptions.Builder.class);
  }

  public static final int FILTER_FIELD_NUMBER = 1;
  private com.github.marcoferrer.krotoplus.config.FileFilter filter_;
  /**
   * <pre>
   * Filter used for limiting the input files that are processed by the code generator
   * The default filter will match true against all input files.
   * </pre>
   *
   * <code>.krotoplus.compiler.FileFilter filter = 1;</code>
   */
  public boolean hasFilter() {
    return filter_ != null;
  }
  /**
   * <pre>
   * Filter used for limiting the input files that are processed by the code generator
   * The default filter will match true against all input files.
   * </pre>
   *
   * <code>.krotoplus.compiler.FileFilter filter = 1;</code>
   */
  public com.github.marcoferrer.krotoplus.config.FileFilter getFilter() {
    return filter_ == null ? com.github.marcoferrer.krotoplus.config.FileFilter.getDefaultInstance() : filter_;
  }
  /**
   * <pre>
   * Filter used for limiting the input files that are processed by the code generator
   * The default filter will match true against all input files.
   * </pre>
   *
   * <code>.krotoplus.compiler.FileFilter filter = 1;</code>
   */
  public com.github.marcoferrer.krotoplus.config.FileFilterOrBuilder getFilterOrBuilder() {
    return getFilter();
  }

  public static final int COMPANION_FIELD_NAME_FIELD_NUMBER = 2;
  private volatile java.lang.Object companionFieldName_;
  /**
   * <pre>
   * The name of the field that will hold a reference to the pseudo companion object
   * </pre>
   *
   * <code>string companion_field_name = 2;</code>
   */
  public java.lang.String getCompanionFieldName() {
    java.lang.Object ref = companionFieldName_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      companionFieldName_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * The name of the field that will hold a reference to the pseudo companion object
   * </pre>
   *
   * <code>string companion_field_name = 2;</code>
   */
  public com.google.protobuf.ByteString
      getCompanionFieldNameBytes() {
    java.lang.Object ref = companionFieldName_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      companionFieldName_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int COMPANION_CLASS_NAME_FIELD_NUMBER = 3;
  private volatile java.lang.Object companionClassName_;
  /**
   * <pre>
   * The name to use for the class declaration of the pseudo companion object
   * </pre>
   *
   * <code>string companion_class_name = 3;</code>
   */
  public java.lang.String getCompanionClassName() {
    java.lang.Object ref = companionClassName_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      companionClassName_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * The name to use for the class declaration of the pseudo companion object
   * </pre>
   *
   * <code>string companion_class_name = 3;</code>
   */
  public com.google.protobuf.ByteString
      getCompanionClassNameBytes() {
    java.lang.Object ref = companionClassName_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      companionClassName_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int COMPANION_EXTENDS_FIELD_NUMBER = 4;
  private volatile java.lang.Object companionExtends_;
  /**
   * <pre>
   * The FQ name of the class that the pseudo companion object should extend.
   * Currently limited to classes with at least one no-args contructor.
   * Referencing the current message type, use the value '{{message_type}}'.
   * This is useful when you want to use the current message as a generic type param.
   * ie. com.krotoplus.example.MyCompanionInterface&lt;{{message_type}}, {{message_type}}.Builder&gt;
   * </pre>
   *
   * <code>string companion_extends = 4;</code>
   */
  public java.lang.String getCompanionExtends() {
    java.lang.Object ref = companionExtends_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      companionExtends_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * The FQ name of the class that the pseudo companion object should extend.
   * Currently limited to classes with at least one no-args contructor.
   * Referencing the current message type, use the value '{{message_type}}'.
   * This is useful when you want to use the current message as a generic type param.
   * ie. com.krotoplus.example.MyCompanionInterface&lt;{{message_type}}, {{message_type}}.Builder&gt;
   * </pre>
   *
   * <code>string companion_extends = 4;</code>
   */
  public com.google.protobuf.ByteString
      getCompanionExtendsBytes() {
    java.lang.Object ref = companionExtends_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      companionExtends_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int COMPANION_IMPLEMENTS_FIELD_NUMBER = 5;
  private volatile java.lang.Object companionImplements_;
  /**
   * <pre>
   * The FQ name of an interface the pseudo companion object should implement.
   * Referencing the current message type, use the value '{{message_type}}'.
   * This is useful when you want to use the current message as a generic type param.
   * ie. com.krotoplus.example.MyCompanionInterface&lt;{{message_type}}, {{message_type}}.Builder&gt;
   * </pre>
   *
   * <code>string companion_implements = 5;</code>
   */
  public java.lang.String getCompanionImplements() {
    java.lang.Object ref = companionImplements_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      companionImplements_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * The FQ name of an interface the pseudo companion object should implement.
   * Referencing the current message type, use the value '{{message_type}}'.
   * This is useful when you want to use the current message as a generic type param.
   * ie. com.krotoplus.example.MyCompanionInterface&lt;{{message_type}}, {{message_type}}.Builder&gt;
   * </pre>
   *
   * <code>string companion_implements = 5;</code>
   */
  public com.google.protobuf.ByteString
      getCompanionImplementsBytes() {
    java.lang.Object ref = companionImplements_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      companionImplements_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (filter_ != null) {
      output.writeMessage(1, getFilter());
    }
    if (!getCompanionFieldNameBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 2, companionFieldName_);
    }
    if (!getCompanionClassNameBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 3, companionClassName_);
    }
    if (!getCompanionExtendsBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 4, companionExtends_);
    }
    if (!getCompanionImplementsBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 5, companionImplements_);
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (filter_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, getFilter());
    }
    if (!getCompanionFieldNameBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, companionFieldName_);
    }
    if (!getCompanionClassNameBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, companionClassName_);
    }
    if (!getCompanionExtendsBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, companionExtends_);
    }
    if (!getCompanionImplementsBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(5, companionImplements_);
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.github.marcoferrer.krotoplus.config.ExtendableMessagesGenOptions)) {
      return super.equals(obj);
    }
    com.github.marcoferrer.krotoplus.config.ExtendableMessagesGenOptions other = (com.github.marcoferrer.krotoplus.config.ExtendableMessagesGenOptions) obj;

    if (hasFilter() != other.hasFilter()) return false;
    if (hasFilter()) {
      if (!getFilter()
          .equals(other.getFilter())) return false;
    }
    if (!getCompanionFieldName()
        .equals(other.getCompanionFieldName())) return false;
    if (!getCompanionClassName()
        .equals(other.getCompanionClassName())) return false;
    if (!getCompanionExtends()
        .equals(other.getCompanionExtends())) return false;
    if (!getCompanionImplements()
        .equals(other.getCompanionImplements())) return false;
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (hasFilter()) {
      hash = (37 * hash) + FILTER_FIELD_NUMBER;
      hash = (53 * hash) + getFilter().hashCode();
    }
    hash = (37 * hash) + COMPANION_FIELD_NAME_FIELD_NUMBER;
    hash = (53 * hash) + getCompanionFieldName().hashCode();
    hash = (37 * hash) + COMPANION_CLASS_NAME_FIELD_NUMBER;
    hash = (53 * hash) + getCompanionClassName().hashCode();
    hash = (37 * hash) + COMPANION_EXTENDS_FIELD_NUMBER;
    hash = (53 * hash) + getCompanionExtends().hashCode();
    hash = (37 * hash) + COMPANION_IMPLEMENTS_FIELD_NUMBER;
    hash = (53 * hash) + getCompanionImplements().hashCode();
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.github.marcoferrer.krotoplus.config.ExtendableMessagesGenOptions parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.github.marcoferrer.krotoplus.config.ExtendableMessagesGenOptions parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.github.marcoferrer.krotoplus.config.ExtendableMessagesGenOptions parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.github.marcoferrer.krotoplus.config.ExtendableMessagesGenOptions parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.github.marcoferrer.krotoplus.config.ExtendableMessagesGenOptions parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.github.marcoferrer.krotoplus.config.ExtendableMessagesGenOptions parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.github.marcoferrer.krotoplus.config.ExtendableMessagesGenOptions parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.github.marcoferrer.krotoplus.config.ExtendableMessagesGenOptions parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.github.marcoferrer.krotoplus.config.ExtendableMessagesGenOptions parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static com.github.marcoferrer.krotoplus.config.ExtendableMessagesGenOptions parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.github.marcoferrer.krotoplus.config.ExtendableMessagesGenOptions parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.github.marcoferrer.krotoplus.config.ExtendableMessagesGenOptions parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.github.marcoferrer.krotoplus.config.ExtendableMessagesGenOptions prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * Configuration used by the 'Extendable Messages' code generator.
   * Since this code generator relies on the protoc insertion point API,
   * its outputDir must match that of the protoc java plugin.
   * </pre>
   *
   * Protobuf type {@code krotoplus.compiler.ExtendableMessagesGenOptions}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:krotoplus.compiler.ExtendableMessagesGenOptions)
      com.github.marcoferrer.krotoplus.config.ExtendableMessagesGenOptionsOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.github.marcoferrer.krotoplus.config.Config.internal_static_krotoplus_compiler_ExtendableMessagesGenOptions_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.github.marcoferrer.krotoplus.config.Config.internal_static_krotoplus_compiler_ExtendableMessagesGenOptions_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.github.marcoferrer.krotoplus.config.ExtendableMessagesGenOptions.class, com.github.marcoferrer.krotoplus.config.ExtendableMessagesGenOptions.Builder.class);
    }

    // Construct using com.github.marcoferrer.krotoplus.config.ExtendableMessagesGenOptions.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      if (filterBuilder_ == null) {
        filter_ = null;
      } else {
        filter_ = null;
        filterBuilder_ = null;
      }
      companionFieldName_ = "";

      companionClassName_ = "";

      companionExtends_ = "";

      companionImplements_ = "";

      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.github.marcoferrer.krotoplus.config.Config.internal_static_krotoplus_compiler_ExtendableMessagesGenOptions_descriptor;
    }

    @java.lang.Override
    public com.github.marcoferrer.krotoplus.config.ExtendableMessagesGenOptions getDefaultInstanceForType() {
      return com.github.marcoferrer.krotoplus.config.ExtendableMessagesGenOptions.getDefaultInstance();
    }

    @java.lang.Override
    public com.github.marcoferrer.krotoplus.config.ExtendableMessagesGenOptions build() {
      com.github.marcoferrer.krotoplus.config.ExtendableMessagesGenOptions result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.github.marcoferrer.krotoplus.config.ExtendableMessagesGenOptions buildPartial() {
      com.github.marcoferrer.krotoplus.config.ExtendableMessagesGenOptions result = new com.github.marcoferrer.krotoplus.config.ExtendableMessagesGenOptions(this);
      if (filterBuilder_ == null) {
        result.filter_ = filter_;
      } else {
        result.filter_ = filterBuilder_.build();
      }
      result.companionFieldName_ = companionFieldName_;
      result.companionClassName_ = companionClassName_;
      result.companionExtends_ = companionExtends_;
      result.companionImplements_ = companionImplements_;
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.github.marcoferrer.krotoplus.config.ExtendableMessagesGenOptions) {
        return mergeFrom((com.github.marcoferrer.krotoplus.config.ExtendableMessagesGenOptions)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.github.marcoferrer.krotoplus.config.ExtendableMessagesGenOptions other) {
      if (other == com.github.marcoferrer.krotoplus.config.ExtendableMessagesGenOptions.getDefaultInstance()) return this;
      if (other.hasFilter()) {
        mergeFilter(other.getFilter());
      }
      if (!other.getCompanionFieldName().isEmpty()) {
        companionFieldName_ = other.companionFieldName_;
        onChanged();
      }
      if (!other.getCompanionClassName().isEmpty()) {
        companionClassName_ = other.companionClassName_;
        onChanged();
      }
      if (!other.getCompanionExtends().isEmpty()) {
        companionExtends_ = other.companionExtends_;
        onChanged();
      }
      if (!other.getCompanionImplements().isEmpty()) {
        companionImplements_ = other.companionImplements_;
        onChanged();
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      com.github.marcoferrer.krotoplus.config.ExtendableMessagesGenOptions parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (com.github.marcoferrer.krotoplus.config.ExtendableMessagesGenOptions) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }

    private com.github.marcoferrer.krotoplus.config.FileFilter filter_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.github.marcoferrer.krotoplus.config.FileFilter, com.github.marcoferrer.krotoplus.config.FileFilter.Builder, com.github.marcoferrer.krotoplus.config.FileFilterOrBuilder> filterBuilder_;
    /**
     * <pre>
     * Filter used for limiting the input files that are processed by the code generator
     * The default filter will match true against all input files.
     * </pre>
     *
     * <code>.krotoplus.compiler.FileFilter filter = 1;</code>
     */
    public boolean hasFilter() {
      return filterBuilder_ != null || filter_ != null;
    }
    /**
     * <pre>
     * Filter used for limiting the input files that are processed by the code generator
     * The default filter will match true against all input files.
     * </pre>
     *
     * <code>.krotoplus.compiler.FileFilter filter = 1;</code>
     */
    public com.github.marcoferrer.krotoplus.config.FileFilter getFilter() {
      if (filterBuilder_ == null) {
        return filter_ == null ? com.github.marcoferrer.krotoplus.config.FileFilter.getDefaultInstance() : filter_;
      } else {
        return filterBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Filter used for limiting the input files that are processed by the code generator
     * The default filter will match true against all input files.
     * </pre>
     *
     * <code>.krotoplus.compiler.FileFilter filter = 1;</code>
     */
    public Builder setFilter(com.github.marcoferrer.krotoplus.config.FileFilter value) {
      if (filterBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        filter_ = value;
        onChanged();
      } else {
        filterBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * Filter used for limiting the input files that are processed by the code generator
     * The default filter will match true against all input files.
     * </pre>
     *
     * <code>.krotoplus.compiler.FileFilter filter = 1;</code>
     */
    public Builder setFilter(
        com.github.marcoferrer.krotoplus.config.FileFilter.Builder builderForValue) {
      if (filterBuilder_ == null) {
        filter_ = builderForValue.build();
        onChanged();
      } else {
        filterBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * Filter used for limiting the input files that are processed by the code generator
     * The default filter will match true against all input files.
     * </pre>
     *
     * <code>.krotoplus.compiler.FileFilter filter = 1;</code>
     */
    public Builder mergeFilter(com.github.marcoferrer.krotoplus.config.FileFilter value) {
      if (filterBuilder_ == null) {
        if (filter_ != null) {
          filter_ =
            com.github.marcoferrer.krotoplus.config.FileFilter.newBuilder(filter_).mergeFrom(value).buildPartial();
        } else {
          filter_ = value;
        }
        onChanged();
      } else {
        filterBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * Filter used for limiting the input files that are processed by the code generator
     * The default filter will match true against all input files.
     * </pre>
     *
     * <code>.krotoplus.compiler.FileFilter filter = 1;</code>
     */
    public Builder clearFilter() {
      if (filterBuilder_ == null) {
        filter_ = null;
        onChanged();
      } else {
        filter_ = null;
        filterBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * Filter used for limiting the input files that are processed by the code generator
     * The default filter will match true against all input files.
     * </pre>
     *
     * <code>.krotoplus.compiler.FileFilter filter = 1;</code>
     */
    public com.github.marcoferrer.krotoplus.config.FileFilter.Builder getFilterBuilder() {
      
      onChanged();
      return getFilterFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Filter used for limiting the input files that are processed by the code generator
     * The default filter will match true against all input files.
     * </pre>
     *
     * <code>.krotoplus.compiler.FileFilter filter = 1;</code>
     */
    public com.github.marcoferrer.krotoplus.config.FileFilterOrBuilder getFilterOrBuilder() {
      if (filterBuilder_ != null) {
        return filterBuilder_.getMessageOrBuilder();
      } else {
        return filter_ == null ?
            com.github.marcoferrer.krotoplus.config.FileFilter.getDefaultInstance() : filter_;
      }
    }
    /**
     * <pre>
     * Filter used for limiting the input files that are processed by the code generator
     * The default filter will match true against all input files.
     * </pre>
     *
     * <code>.krotoplus.compiler.FileFilter filter = 1;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.github.marcoferrer.krotoplus.config.FileFilter, com.github.marcoferrer.krotoplus.config.FileFilter.Builder, com.github.marcoferrer.krotoplus.config.FileFilterOrBuilder> 
        getFilterFieldBuilder() {
      if (filterBuilder_ == null) {
        filterBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.github.marcoferrer.krotoplus.config.FileFilter, com.github.marcoferrer.krotoplus.config.FileFilter.Builder, com.github.marcoferrer.krotoplus.config.FileFilterOrBuilder>(
                getFilter(),
                getParentForChildren(),
                isClean());
        filter_ = null;
      }
      return filterBuilder_;
    }

    private java.lang.Object companionFieldName_ = "";
    /**
     * <pre>
     * The name of the field that will hold a reference to the pseudo companion object
     * </pre>
     *
     * <code>string companion_field_name = 2;</code>
     */
    public java.lang.String getCompanionFieldName() {
      java.lang.Object ref = companionFieldName_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        companionFieldName_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * The name of the field that will hold a reference to the pseudo companion object
     * </pre>
     *
     * <code>string companion_field_name = 2;</code>
     */
    public com.google.protobuf.ByteString
        getCompanionFieldNameBytes() {
      java.lang.Object ref = companionFieldName_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        companionFieldName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * The name of the field that will hold a reference to the pseudo companion object
     * </pre>
     *
     * <code>string companion_field_name = 2;</code>
     */
    public Builder setCompanionFieldName(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      companionFieldName_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The name of the field that will hold a reference to the pseudo companion object
     * </pre>
     *
     * <code>string companion_field_name = 2;</code>
     */
    public Builder clearCompanionFieldName() {
      
      companionFieldName_ = getDefaultInstance().getCompanionFieldName();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The name of the field that will hold a reference to the pseudo companion object
     * </pre>
     *
     * <code>string companion_field_name = 2;</code>
     */
    public Builder setCompanionFieldNameBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      companionFieldName_ = value;
      onChanged();
      return this;
    }

    private java.lang.Object companionClassName_ = "";
    /**
     * <pre>
     * The name to use for the class declaration of the pseudo companion object
     * </pre>
     *
     * <code>string companion_class_name = 3;</code>
     */
    public java.lang.String getCompanionClassName() {
      java.lang.Object ref = companionClassName_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        companionClassName_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * The name to use for the class declaration of the pseudo companion object
     * </pre>
     *
     * <code>string companion_class_name = 3;</code>
     */
    public com.google.protobuf.ByteString
        getCompanionClassNameBytes() {
      java.lang.Object ref = companionClassName_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        companionClassName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * The name to use for the class declaration of the pseudo companion object
     * </pre>
     *
     * <code>string companion_class_name = 3;</code>
     */
    public Builder setCompanionClassName(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      companionClassName_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The name to use for the class declaration of the pseudo companion object
     * </pre>
     *
     * <code>string companion_class_name = 3;</code>
     */
    public Builder clearCompanionClassName() {
      
      companionClassName_ = getDefaultInstance().getCompanionClassName();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The name to use for the class declaration of the pseudo companion object
     * </pre>
     *
     * <code>string companion_class_name = 3;</code>
     */
    public Builder setCompanionClassNameBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      companionClassName_ = value;
      onChanged();
      return this;
    }

    private java.lang.Object companionExtends_ = "";
    /**
     * <pre>
     * The FQ name of the class that the pseudo companion object should extend.
     * Currently limited to classes with at least one no-args contructor.
     * Referencing the current message type, use the value '{{message_type}}'.
     * This is useful when you want to use the current message as a generic type param.
     * ie. com.krotoplus.example.MyCompanionInterface&lt;{{message_type}}, {{message_type}}.Builder&gt;
     * </pre>
     *
     * <code>string companion_extends = 4;</code>
     */
    public java.lang.String getCompanionExtends() {
      java.lang.Object ref = companionExtends_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        companionExtends_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * The FQ name of the class that the pseudo companion object should extend.
     * Currently limited to classes with at least one no-args contructor.
     * Referencing the current message type, use the value '{{message_type}}'.
     * This is useful when you want to use the current message as a generic type param.
     * ie. com.krotoplus.example.MyCompanionInterface&lt;{{message_type}}, {{message_type}}.Builder&gt;
     * </pre>
     *
     * <code>string companion_extends = 4;</code>
     */
    public com.google.protobuf.ByteString
        getCompanionExtendsBytes() {
      java.lang.Object ref = companionExtends_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        companionExtends_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * The FQ name of the class that the pseudo companion object should extend.
     * Currently limited to classes with at least one no-args contructor.
     * Referencing the current message type, use the value '{{message_type}}'.
     * This is useful when you want to use the current message as a generic type param.
     * ie. com.krotoplus.example.MyCompanionInterface&lt;{{message_type}}, {{message_type}}.Builder&gt;
     * </pre>
     *
     * <code>string companion_extends = 4;</code>
     */
    public Builder setCompanionExtends(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      companionExtends_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The FQ name of the class that the pseudo companion object should extend.
     * Currently limited to classes with at least one no-args contructor.
     * Referencing the current message type, use the value '{{message_type}}'.
     * This is useful when you want to use the current message as a generic type param.
     * ie. com.krotoplus.example.MyCompanionInterface&lt;{{message_type}}, {{message_type}}.Builder&gt;
     * </pre>
     *
     * <code>string companion_extends = 4;</code>
     */
    public Builder clearCompanionExtends() {
      
      companionExtends_ = getDefaultInstance().getCompanionExtends();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The FQ name of the class that the pseudo companion object should extend.
     * Currently limited to classes with at least one no-args contructor.
     * Referencing the current message type, use the value '{{message_type}}'.
     * This is useful when you want to use the current message as a generic type param.
     * ie. com.krotoplus.example.MyCompanionInterface&lt;{{message_type}}, {{message_type}}.Builder&gt;
     * </pre>
     *
     * <code>string companion_extends = 4;</code>
     */
    public Builder setCompanionExtendsBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      companionExtends_ = value;
      onChanged();
      return this;
    }

    private java.lang.Object companionImplements_ = "";
    /**
     * <pre>
     * The FQ name of an interface the pseudo companion object should implement.
     * Referencing the current message type, use the value '{{message_type}}'.
     * This is useful when you want to use the current message as a generic type param.
     * ie. com.krotoplus.example.MyCompanionInterface&lt;{{message_type}}, {{message_type}}.Builder&gt;
     * </pre>
     *
     * <code>string companion_implements = 5;</code>
     */
    public java.lang.String getCompanionImplements() {
      java.lang.Object ref = companionImplements_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        companionImplements_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * The FQ name of an interface the pseudo companion object should implement.
     * Referencing the current message type, use the value '{{message_type}}'.
     * This is useful when you want to use the current message as a generic type param.
     * ie. com.krotoplus.example.MyCompanionInterface&lt;{{message_type}}, {{message_type}}.Builder&gt;
     * </pre>
     *
     * <code>string companion_implements = 5;</code>
     */
    public com.google.protobuf.ByteString
        getCompanionImplementsBytes() {
      java.lang.Object ref = companionImplements_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        companionImplements_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * The FQ name of an interface the pseudo companion object should implement.
     * Referencing the current message type, use the value '{{message_type}}'.
     * This is useful when you want to use the current message as a generic type param.
     * ie. com.krotoplus.example.MyCompanionInterface&lt;{{message_type}}, {{message_type}}.Builder&gt;
     * </pre>
     *
     * <code>string companion_implements = 5;</code>
     */
    public Builder setCompanionImplements(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      companionImplements_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The FQ name of an interface the pseudo companion object should implement.
     * Referencing the current message type, use the value '{{message_type}}'.
     * This is useful when you want to use the current message as a generic type param.
     * ie. com.krotoplus.example.MyCompanionInterface&lt;{{message_type}}, {{message_type}}.Builder&gt;
     * </pre>
     *
     * <code>string companion_implements = 5;</code>
     */
    public Builder clearCompanionImplements() {
      
      companionImplements_ = getDefaultInstance().getCompanionImplements();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The FQ name of an interface the pseudo companion object should implement.
     * Referencing the current message type, use the value '{{message_type}}'.
     * This is useful when you want to use the current message as a generic type param.
     * ie. com.krotoplus.example.MyCompanionInterface&lt;{{message_type}}, {{message_type}}.Builder&gt;
     * </pre>
     *
     * <code>string companion_implements = 5;</code>
     */
    public Builder setCompanionImplementsBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      companionImplements_ = value;
      onChanged();
      return this;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:krotoplus.compiler.ExtendableMessagesGenOptions)
  }

  // @@protoc_insertion_point(class_scope:krotoplus.compiler.ExtendableMessagesGenOptions)
  private static final com.github.marcoferrer.krotoplus.config.ExtendableMessagesGenOptions DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.github.marcoferrer.krotoplus.config.ExtendableMessagesGenOptions();
  }

  public static com.github.marcoferrer.krotoplus.config.ExtendableMessagesGenOptions getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<ExtendableMessagesGenOptions>
      PARSER = new com.google.protobuf.AbstractParser<ExtendableMessagesGenOptions>() {
    @java.lang.Override
    public ExtendableMessagesGenOptions parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new ExtendableMessagesGenOptions(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<ExtendableMessagesGenOptions> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<ExtendableMessagesGenOptions> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.github.marcoferrer.krotoplus.config.ExtendableMessagesGenOptions getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

