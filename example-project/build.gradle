buildscript {
    ext {
        versions = [
                "protobuf":   '3.9.0',
                "grpc":       '1.23.0',
                "kotlin":     '1.3.41',
                "coroutines": '1.3.0-RC2',
                "krotoplus":  '0.5.0-RC'
        ]
    }

    repositories {
        jcenter()
        mavenCentral()
        maven { url 'http://dl.bintray.com/kotlin/kotlin-eap' }
    }
}

plugins{
    id 'idea'
    id 'com.google.protobuf' version '0.8.7'
    id "org.jetbrains.kotlin.jvm" version "1.3.41"
}

group = 'com.github.marcoferrer.krotoplus'
version = versions.krotoplus

compileKotlin {
    kotlinOptions{
        jvmTarget = "1.8"
    }
}

compileTestKotlin {
    kotlinOptions{
        jvmTarget = "1.8"
        freeCompilerArgs += ["-Xuse-experimental=kotlin.Experimental"]
    }
}

allprojects {
    apply plugin: 'kotlin'

    repositories {
        jcenter()
        maven { url 'http://dl.bintray.com/kotlin/kotlin-eap' }
        maven { url "https://kotlin.bintray.com/kotlinx" }

        flatDir dirs: "${rootDir}/../kroto-plus-message/build/libs/"
        flatDir dirs: "${rootDir}/../kroto-plus-coroutines/build/libs/"
        flatDir dirs: "${rootDir}/../kroto-plus-test/build/libs/"
        flatDir dirs: "${rootDir}/../protoc-gen-kroto-plus/build/libs/"
    }
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:${versions.coroutines}"
    implementation "com.google.protobuf:protobuf-java:${versions.protobuf}"
    implementation "com.github.marcoferrer.krotoplus:kroto-plus-coroutines:${versions.krotoplus}"
    implementation "com.github.marcoferrer.krotoplus:kroto-plus-test:${versions.krotoplus}"
    implementation "com.github.marcoferrer.krotoplus:kroto-plus-message:${versions.krotoplus}"

    implementation "io.grpc:grpc-protobuf:${versions.grpc}",
                   "io.grpc:grpc-stub:${versions.grpc}",
                   "io.grpc:grpc-netty:${versions.grpc}"

    testImplementation "io.grpc:grpc-testing:${versions.grpc}"

    testImplementation group: 'junit', name: 'junit', version: '[4,)'
    testImplementation "org.jetbrains.kotlin:kotlin-test"
    testImplementation "org.jetbrains.kotlin:kotlin-test-junit"
}

idea {
    module {
        inheritOutputDirs = false
        outputDir = file("$buildDir/classes/kotlin/main")
        testOutputDir = file("$buildDir/classes/kotlin/test")
    }
}

protobuf {
    protoc { artifact = "com.google.protobuf:protoc:${versions.protobuf}"}

    generatedFilesBaseDir = "$buildDir/generated-sources"

    //noinspection GroovyAssignabilityCheck
    plugins {
        grpc { artifact = "io.grpc:protoc-gen-grpc-java:${versions.grpc}" }
        kroto {
            artifact = "com.github.marcoferrer.krotoplus:protoc-gen-kroto-plus:${versions.krotoplus}:jvm8@jar"
        }
    }

    generateProtoTasks {
        def krotoConfig = file("krotoPlusConfig.asciipb")

        all().each{ task ->
            // Adding the config file to the task inputs lets UP-TO-DATE checks
            // include changes to configuration
            task.inputs.files krotoConfig
            
            // If we're using precompiled scripts for improved performance then we
            // should depend on the jar task for our scripts
            task.dependsOn ':kp-scripts:jar'

            task.plugins {
                grpc { outputSubDir = "java" }
                kroto {
                    // The extendable-messages generator needs the outputSubDir
                    // to be the same as 'task.builtins.java.outputSubDir' since
                    // it relies on the insertion_point api from protoc.
                    outputSubDir = "java"
                    option "ConfigPath=$krotoConfig"
                }
            }
        }
    }
}
